{
  "stats": {
    "suites": 15,
    "tests": 49,
    "passes": 47,
    "pending": 0,
    "failures": 2,
    "start": "2023-01-29T23:37:48.178Z",
    "end": "2023-01-29T23:38:25.984Z",
    "duration": 37806,
    "testsRegistered": 49,
    "passPercent": 95.91836734693877,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "068b2aac-247b-441d-9c66-9f934b6a23ad",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c5926bac-f654-4b17-a31d-5b09dae0a1bc",
          "title": "1 - Adicione à página o título \"Paleta de Cores\"",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\" Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 234,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "47eed6a1-25c7-4408-8fee-85ea0477839c",
              "parentUUID": "c5926bac-f654-4b17-a31d-5b09dae0a1bc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "47eed6a1-25c7-4408-8fee-85ea0477839c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 234,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bf9c79fd-a211-435b-b84a-38f62feb874b",
          "title": "2 - Adicione à página uma paleta contendo quatro cores distintas",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 74,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "bfbdf8c7-6172-464a-9622-2f35f90fd0ea",
              "parentUUID": "bf9c79fd-a211-435b-b84a-38f62feb874b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 103,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "ade97235-fcd4-4a70-97b9-b1f6e7420001",
              "parentUUID": "bf9c79fd-a211-435b-b84a-38f62feb874b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "e4076323-d372-492f-b301-61dfdb275924",
              "parentUUID": "bf9c79fd-a211-435b-b84a-38f62feb874b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 85,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "8c6f5f62-a2fe-4557-afaf-7240b16e78f0",
              "parentUUID": "bf9c79fd-a211-435b-b84a-38f62feb874b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "18be18f6-0125-4613-9ef3-ea64d74c9804",
              "parentUUID": "bf9c79fd-a211-435b-b84a-38f62feb874b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 87,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "6b31ae58-7960-47f4-9d4c-1356d777df4c",
              "parentUUID": "bf9c79fd-a211-435b-b84a-38f62feb874b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 81,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "8c27eee8-c0f0-4593-85ee-5a463abdf270",
              "parentUUID": "bf9c79fd-a211-435b-b84a-38f62feb874b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bfbdf8c7-6172-464a-9622-2f35f90fd0ea",
            "ade97235-fcd4-4a70-97b9-b1f6e7420001",
            "e4076323-d372-492f-b301-61dfdb275924",
            "8c6f5f62-a2fe-4557-afaf-7240b16e78f0",
            "18be18f6-0125-4613-9ef3-ea64d74c9804",
            "6b31ae58-7960-47f4-9d4c-1356d777df4c",
            "8c27eee8-c0f0-4593-85ee-5a463abdf270"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 619,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f1101edd-358e-4316-b4e0-2399e3841d51",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "f3722226-4236-451a-ae6c-29c207053286",
              "parentUUID": "f1101edd-358e-4316-b4e0-2399e3841d51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "824943c2-780a-499f-b927-1f3fd05aa715",
              "parentUUID": "f1101edd-358e-4316-b4e0-2399e3841d51",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f3722226-4236-451a-ae6c-29c207053286",
            "824943c2-780a-499f-b927-1f3fd05aa715"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 259,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eadba98c-393e-4978-ac4f-96337052ba7f",
          "title": "4 - Adicione um botão para gerar cores aleatórias para a paleta de cores",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "O botão deve possuir o `id` denominado `button-random-color`",
              "fullTitle": "4 - Adicione um botão para gerar cores aleatórias para a paleta de cores O botão deve possuir o `id` denominado `button-random-color`",
              "timedOut": null,
              "duration": 70,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#button-random-color').should('be.visible');",
              "err": {},
              "uuid": "c328a02b-ad6a-4ad3-ac51-c88b6619fd32",
              "parentUUID": "eadba98c-393e-4978-ac4f-96337052ba7f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "O botão deve possuir o texto `Cores aleatórias`",
              "fullTitle": "4 - Adicione um botão para gerar cores aleatórias para a paleta de cores O botão deve possuir o texto `Cores aleatórias`",
              "timedOut": null,
              "duration": 100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#button-random-color').contains('Cores aleatórias');",
              "err": {},
              "uuid": "f20dbce7-88f0-4bca-8198-9a0e4d8bd8f1",
              "parentUUID": "eadba98c-393e-4978-ac4f-96337052ba7f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As cores geradas na paleta são diferentes a cada click do botão.",
              "fullTitle": "4 - Adicione um botão para gerar cores aleatórias para a paleta de cores As cores geradas na paleta são diferentes a cada click do botão.",
              "timedOut": null,
              "duration": 466,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.get('#button-random-color').click();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "53115f38-3a1a-4bea-8dd5-b7ffa7a213e7",
              "parentUUID": "eadba98c-393e-4978-ac4f-96337052ba7f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A cor preta deve ser a primeira na sua paleta de cores",
              "fullTitle": "4 - Adicione um botão para gerar cores aleatórias para a paleta de cores A cor preta deve ser a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 489,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.get('#button-random-color').click();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "78729bb8-b18c-44ab-9e89-6055ec23917a",
              "parentUUID": "eadba98c-393e-4978-ac4f-96337052ba7f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c328a02b-ad6a-4ad3-ac51-c88b6619fd32",
            "f20dbce7-88f0-4bca-8198-9a0e4d8bd8f1",
            "53115f38-3a1a-4bea-8dd5-b7ffa7a213e7",
            "78729bb8-b18c-44ab-9e89-6055ec23917a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1125,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fb67dec5-c07d-4840-8c0d-760cc1f29fae",
          "title": "5 - Implemente uma função usando localStorage para que a paleta de cores gerada aleatoriamente seja mantida após recarregar a página",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta gerada deve ser salva no localStorage com a chave `colorPalette`",
              "fullTitle": "5 - Implemente uma função usando localStorage para que a paleta de cores gerada aleatoriamente seja mantida após recarregar a página A paleta gerada deve ser salva no localStorage com a chave `colorPalette`",
              "timedOut": null,
              "duration": 140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#button-random-color').click().should(function () {\n  expect(localStorage.getItem('colorPalette')).to.not.equal(null);\n});",
              "err": {},
              "uuid": "29e4b858-3ace-44ed-a405-7d1eb8d266e6",
              "parentUUID": "fb67dec5-c07d-4840-8c0d-760cc1f29fae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A paleta gerada deve ser mantida ao recarregar a página",
              "fullTitle": "5 - Implemente uma função usando localStorage para que a paleta de cores gerada aleatoriamente seja mantida após recarregar a página A paleta gerada deve ser mantida ao recarregar a página",
              "timedOut": null,
              "duration": 148,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#button-random-color').click();\ncy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.reload();\n  cy.get('.color').then(function (colorsAfter) {\n    currentColors = Array.from(colorsAfter).map(function (colorAfter) {\n      return Cypress.$(colorAfter).css('background-color');\n    });\n    expect(currentColors).to.deep.equal(previousColors);\n  });\n});",
              "err": {},
              "uuid": "f3057032-4837-4d2b-9383-b1cc92cd5995",
              "parentUUID": "fb67dec5-c07d-4840-8c0d-760cc1f29fae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "29e4b858-3ace-44ed-a405-7d1eb8d266e6",
            "f3057032-4837-4d2b-9383-b1cc92cd5995"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 288,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5a6f9e20-7f4b-48a3-a933-0165d83cd7c2",
          "title": "6 - Adicione à página um quadro contendo 25 pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "6 - Adicione à página um quadro contendo 25 pixels Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 50,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "55048479-3607-4b5a-a79c-14b6fe096d38",
              "parentUUID": "5a6f9e20-7f4b-48a3-a933-0165d83cd7c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "6 - Adicione à página um quadro contendo 25 pixels Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "132e08e1-36aa-4aec-8500-d0239c5e36b0",
              "parentUUID": "5a6f9e20-7f4b-48a3-a933-0165d83cd7c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "6 - Adicione à página um quadro contendo 25 pixels Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "6b565ee5-9b36-43da-b741-90408555e93c",
              "parentUUID": "5a6f9e20-7f4b-48a3-a933-0165d83cd7c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "6 - Adicione à página um quadro contendo 25 pixels Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 84,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "f9b48206-3744-4a47-9feb-873fe28e7715",
              "parentUUID": "5a6f9e20-7f4b-48a3-a933-0165d83cd7c2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "55048479-3607-4b5a-a79c-14b6fe096d38",
            "132e08e1-36aa-4aec-8500-d0239c5e36b0",
            "6b565ee5-9b36-43da-b741-90408555e93c",
            "f9b48206-3744-4a47-9feb-873fe28e7715"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 352,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "51cf2593-cf1c-4119-8082-05198b9bb64e",
          "title": "7 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "7 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 207,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "5a621da7-2388-41ad-affe-5f75fabc82db",
              "parentUUID": "51cf2593-cf1c-4119-8082-05198b9bb64e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "7 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "894299e2-93c1-46a9-88b6-a344b3d3787d",
              "parentUUID": "51cf2593-cf1c-4119-8082-05198b9bb64e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5a621da7-2388-41ad-affe-5f75fabc82db",
            "894299e2-93c1-46a9-88b6-a344b3d3787d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 384,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4d0042ef-40d9-4686-af4d-6f05e3b824d6",
          "title": "8 - Defina a cor preta como cor inicial da paleta de cores. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "8 - Defina a cor preta como cor inicial da paleta de cores. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "dddc7461-0562-4429-a013-e8cf54a883a5",
              "parentUUID": "4d0042ef-40d9-4686-af4d-6f05e3b824d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "8 - Defina a cor preta como cor inicial da paleta de cores. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 72,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "e45a7419-2f17-4196-839e-7f4af03b6bb5",
              "parentUUID": "4d0042ef-40d9-4686-af4d-6f05e3b824d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dddc7461-0562-4429-a013-e8cf54a883a5",
            "e45a7419-2f17-4196-839e-7f4af03b6bb5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 164,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f28118be-ab82-4732-b5aa-22623bb7c40f",
          "title": "9 - Crie uma função para selecionar uma cor na paleta de cores e preencher os pixels no quadro",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "9 - Crie uma função para selecionar uma cor na paleta de cores e preencher os pixels no quadro Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 418,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "ca09b68b-b20c-4e4b-a93e-c6706a2f6d85",
              "parentUUID": "f28118be-ab82-4732-b5aa-22623bb7c40f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "9 - Crie uma função para selecionar uma cor na paleta de cores e preencher os pixels no quadro Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8093,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "cd6b99d7-bdb5-4f0b-ae9a-e4fb28d14694",
              "parentUUID": "f28118be-ab82-4732-b5aa-22623bb7c40f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ca09b68b-b20c-4e4b-a93e-c6706a2f6d85",
            "cd6b99d7-bdb5-4f0b-ae9a-e4fb28d14694"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8511,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "03a75968-b034-41fe-9ca2-af442bb1183c",
          "title": "10 - Crie uma função que permita preencher um pixel do quadro com a cor selecionada na paleta de cores",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "10 - Crie uma função que permita preencher um pixel do quadro com a cor selecionada na paleta de cores Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 1998,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "f6ebe26f-3666-46a7-949c-6437ea2422cf",
              "parentUUID": "03a75968-b034-41fe-9ca2-af442bb1183c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "10 - Crie uma função que permita preencher um pixel do quadro com a cor selecionada na paleta de cores Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8079,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "922ad8f0-93b0-426c-bbfb-351e70cb65f4",
              "parentUUID": "03a75968-b034-41fe-9ca2-af442bb1183c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "10 - Crie uma função que permita preencher um pixel do quadro com a cor selecionada na paleta de cores Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1059,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "f61f5d49-f215-4fe6-b58c-88c73bb6db1b",
              "parentUUID": "03a75968-b034-41fe-9ca2-af442bb1183c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f6ebe26f-3666-46a7-949c-6437ea2422cf",
            "922ad8f0-93b0-426c-bbfb-351e70cb65f4",
            "f61f5d49-f215-4fe6-b58c-88c73bb6db1b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11136,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "65dd921a-7ea2-47d2-a4ed-3f46378b9344",
          "title": "11 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "11 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "0c659d58-bf4d-41bf-bac7-c42baa8b5e92",
              "parentUUID": "65dd921a-7ea2-47d2-a4ed-3f46378b9344",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "11 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 65,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "b168a4c8-501d-4d4c-b0ea-5041c1ce8eb9",
              "parentUUID": "65dd921a-7ea2-47d2-a4ed-3f46378b9344",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "11 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 43,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "993ed562-6da4-4451-a83f-afcc3eb3790c",
              "parentUUID": "65dd921a-7ea2-47d2-a4ed-3f46378b9344",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "11 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2171,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "352750dc-595a-4352-a884-b345ba00efb7",
              "parentUUID": "65dd921a-7ea2-47d2-a4ed-3f46378b9344",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0c659d58-bf4d-41bf-bac7-c42baa8b5e92",
            "b168a4c8-501d-4d4c-b0ea-5041c1ce8eb9",
            "993ed562-6da4-4451-a83f-afcc3eb3790c",
            "352750dc-595a-4352-a884-b345ba00efb7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2372,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "757e76b5-20ea-48c8-bdaa-3b7fefde1d9f",
          "title": "12 - Crie uma função para salvar e recuperar o seu desenho atual no localStorage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Os pixels pintados devem ser salvos no localStorage com a chave `pixelBoard`",
              "fullTitle": "12 - Crie uma função para salvar e recuperar o seu desenho atual no localStorage Os pixels pintados devem ser salvos no localStorage com a chave `pixelBoard`",
              "timedOut": null,
              "duration": 185,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel:first').click().then(function () {\n  var pixelboard = localStorage.getItem('pixelBoard');\n  expect(pixelboard).to.not.equal(null);\n});",
              "err": {},
              "uuid": "3a15720c-edb0-434b-a173-85a2ffc84ea2",
              "parentUUID": "757e76b5-20ea-48c8-bdaa-3b7fefde1d9f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "O quadro deve ser preenchido com as mesmas cores utilizadas anteriormente, nas posições corretas ao recarregar a página",
              "fullTitle": "12 - Crie uma função para salvar e recuperar o seu desenho atual no localStorage O quadro deve ser preenchido com as mesmas cores utilizadas anteriormente, nas posições corretas ao recarregar a página",
              "timedOut": null,
              "duration": 852,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color, index) {\n  if (index === 2) {\n    cy.wrap(color).click();\n    var backgroundColor = color.css('background-color');\n    var clickedPixelsIndex = [2, 7, 10, 11, 12, 13, 14, 17, 22];\n    cy.get('.pixel').each(function (pixel, index) {\n      clickedPixelsIndex.forEach(function (pixelIndex) {\n        if (index === pixelIndex) cy.wrap(pixel).click();\n      });\n    });\n    cy.reload();\n    cy.get('.pixel').each(function (pixel, index) {\n      clickedPixelsIndex.forEach(function (pixelIndex) {\n        if (index === pixelIndex) cy.wrap(pixel).should('have.css', 'background-color', backgroundColor);\n      });\n    });\n  }\n});",
              "err": {},
              "uuid": "d65b6433-f5b8-460b-9509-e6383fdd3670",
              "parentUUID": "757e76b5-20ea-48c8-bdaa-3b7fefde1d9f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3a15720c-edb0-434b-a173-85a2ffc84ea2",
            "d65b6433-f5b8-460b-9509-e6383fdd3670"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1037,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e2bbb455-3f5c-45c7-92c0-d8cc3a4320b9",
          "title": "13 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "13 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 56,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "139a42b9-4927-4c9a-afaf-f7c3bb774f97",
              "parentUUID": "e2bbb455-3f5c-45c7-92c0-d8cc3a4320b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "13 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 55,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "902e9b26-4496-4b96-90a5-fbb60332112d",
              "parentUUID": "e2bbb455-3f5c-45c7-92c0-d8cc3a4320b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "13 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 46,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {},
              "uuid": "a8994770-11ad-493f-88c1-66965fd47d5f",
              "parentUUID": "e2bbb455-3f5c-45c7-92c0-d8cc3a4320b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "13 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 66,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "fed60713-818d-4145-9c0d-5feebd3ffafd",
              "parentUUID": "e2bbb455-3f5c-45c7-92c0-d8cc3a4320b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "13 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "51c01552-d22b-49fc-8714-f5daf6fda0d7",
              "parentUUID": "e2bbb455-3f5c-45c7-92c0-d8cc3a4320b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "13 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "8433c6cf-b83e-476c-b7af-272fbb25c4dd",
              "parentUUID": "e2bbb455-3f5c-45c7-92c0-d8cc3a4320b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "13 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 208,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {},
              "uuid": "1bd307b0-1055-4ab3-a60a-43162f60d08e",
              "parentUUID": "e2bbb455-3f5c-45c7-92c0-d8cc3a4320b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "13 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 498,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {},
              "uuid": "845aba23-36ff-48a1-9f00-a6f7638e32a2",
              "parentUUID": "e2bbb455-3f5c-45c7-92c0-d8cc3a4320b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "13 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 404,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "73c47e3e-7c38-48c6-ab71-bc00e2d8504f",
              "parentUUID": "e2bbb455-3f5c-45c7-92c0-d8cc3a4320b9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "139a42b9-4927-4c9a-afaf-f7c3bb774f97",
            "902e9b26-4496-4b96-90a5-fbb60332112d",
            "a8994770-11ad-493f-88c1-66965fd47d5f",
            "fed60713-818d-4145-9c0d-5feebd3ffafd",
            "51c01552-d22b-49fc-8714-f5daf6fda0d7",
            "8433c6cf-b83e-476c-b7af-272fbb25c4dd",
            "1bd307b0-1055-4ab3-a60a-43162f60d08e",
            "845aba23-36ff-48a1-9f00-a6f7638e32a2",
            "73c47e3e-7c38-48c6-ab71-bc00e2d8504f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1548,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2721c0f5-fcd2-4334-a5a6-43aaecc031e0",
          "title": "14 - Crie uma função que limite o tamanho mínimo e máximo do quadro de pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "14 - Crie uma função que limite o tamanho mínimo e máximo do quadro de pixels Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 1441,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {},
              "uuid": "9454dd84-efba-4626-85cd-67fd20f4f9bd",
              "parentUUID": "2721c0f5-fcd2-4334-a5a6-43aaecc031e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "14 - Crie uma função que limite o tamanho mínimo e máximo do quadro de pixels Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 401,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "d0c8f8ec-94f4-405c-ba79-879c9c77aee4",
              "parentUUID": "2721c0f5-fcd2-4334-a5a6-43aaecc031e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "14 - Crie uma função que limite o tamanho mínimo e máximo do quadro de pixels Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 1384,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {},
              "uuid": "c9f82cf8-90c4-41a6-a714-a2788bf112a5",
              "parentUUID": "2721c0f5-fcd2-4334-a5a6-43aaecc031e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9454dd84-efba-4626-85cd-67fd20f4f9bd",
            "d0c8f8ec-94f4-405c-ba79-879c9c77aee4",
            "c9f82cf8-90c4-41a6-a714-a2788bf112a5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3226,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2bc8c695-8b75-4667-a7bf-4e2cdeadc336",
          "title": "15 - Crie uma função para manter o tamanho novo do board ao recarregar a página",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "O tamanho do board gerado deve ser salvo no localStorage com a chave `boardSize`",
              "fullTitle": "15 - Crie uma função para manter o tamanho novo do board ao recarregar a página O tamanho do board gerado deve ser salvo no localStorage com a chave `boardSize`",
              "timedOut": null,
              "duration": 846,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.reload().then(function () {\n  var boardSize = JSON.parse(localStorage.getItem('boardSize'));\n  expect(boardSize).to.not.equal(null);\n});",
              "err": {
                "message": "AssertionError: expected null to not equal null",
                "estack": "AssertionError: expected null to not equal null\n    at getRet (http://localhost:51791/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:51791/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:51791/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:51791/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:51791/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:51791/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:51791/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:51791/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51791/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51791/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:51791/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51791/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51791/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51791/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "08185315-d20a-47c5-a6c8-e6ce00918e3d",
              "parentUUID": "2bc8c695-8b75-4667-a7bf-4e2cdeadc336",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "O quadro deve ter o mesmo tamanho gerado ao recarregar a página.",
              "fullTitle": "15 - Crie uma função para manter o tamanho novo do board ao recarregar a página O quadro deve ter o mesmo tamanho gerado ao recarregar a página.",
              "timedOut": null,
              "duration": 4789,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.reload();\ncy.get('.pixel').should('have.length', 36);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.\n    at cypressErr (http://localhost:51791/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:51791/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:51791/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:51791/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:51791/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:51791/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51791/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51791/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:51791/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:51791/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51791/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51791/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51791/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "27bf00f7-a07a-437c-a63d-419a29d75545",
              "parentUUID": "2bc8c695-8b75-4667-a7bf-4e2cdeadc336",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "08185315-d20a-47c5-a6c8-e6ce00918e3d",
            "27bf00f7-a07a-437c-a63d-419a29d75545"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5635,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}